{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nvar API_BASE_URL = 'http://localhost:8080/api';\nvar ACCESS_TOKEN = 'accessToken';\n\nvar request = function request(options) {\n  var headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}; // export function login(loginRequest) {\n//     return request({\n//         url: API_BASE_URL + \"/auth/sign-in\",\n//         method: 'POST',\n//         body: JSON.stringify(loginRequest)\n//     });\n// }\n// export function signup(signupRequest) {\n//     return request({\n//         url: API_BASE_URL + \"/auth/sign-up\",\n//         method: 'POST',\n//         body: JSON.stringify(signupRequest)\n//     });\n// }\n// export function checkUsernameAvailability(username) {\n//     return request({\n//         url: API_BASE_URL + \"/user/exist-username?username=\" + username,\n//         method: 'GET'\n//     });\n// }\n//\n// export function checkEmailAvailability(email) {\n//     return request({\n//         url: API_BASE_URL + \"/user/exist-email?email=\" + email,\n//         method: 'GET'\n//     });\n// }\n//\n// export function getCurrentUser() {\n//     if(!localStorage.getItem(ACCESS_TOKEN)) {\n//         return Promise.reject(\"No access token set.\");\n//     }\n//\n//     return request({\n//         url: API_BASE_URL + \"/user/profile\",\n//         method: 'GET'\n//     });\n// }\n//\n// export function getUserProfile(username) {\n//     return request({\n//         url: API_BASE_URL + \"/users/\" + username,\n//         method: 'GET'\n//     });\n// }\n//\n// export function getListAccount() {\n//     return request({\n//         url: API_BASE_URL + \"/accounts/all\",\n//         method: 'GET'\n//     });\n// }\n\n\nvar AuthenticationAPI =\n/*#__PURE__*/\nfunction () {\n  function AuthenticationAPI() {\n    _classCallCheck(this, AuthenticationAPI);\n  }\n\n  _createClass(AuthenticationAPI, [{\n    key: \"login\",\n    value: function login(loginRequest) {\n      return axios.get(\"\".concat(API_BASE_URL, \" + \\\"/auth/sign-in\\\"\"));\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(signupRequest) {\n      return axios.get(\"\".concat(API_BASE_URL, \" + \\\"/auth/sign-up\\\"\"));\n    }\n  }, {\n    key: \"deleteMember\",\n    value: function deleteMember(id) {\n      return axios.delete(\"\".concat(API_BASE_URL, \"/\").concat(id));\n    }\n  }, {\n    key: \"updateMember\",\n    value: function updateMember(id, member) {\n      return axios.put(\"\".concat(API_BASE_URL, \"/\").concat(id), member);\n    }\n  }, {\n    key: \"createMember\",\n    value: function createMember(member) {\n      return axios.post(\"\".concat(API_BASE_URL), member);\n    }\n  }]);\n\n  return AuthenticationAPI;\n}();\n\nexport default new AuthenticationAPI();","map":{"version":3,"sources":["C:\\Users\\trinh\\Downloads\\project\\chat-app\\client-chat-app\\src\\service\\AuthenticationAPI.js"],"names":["axios","API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","AuthenticationAPI","loginRequest","get","signupRequest","id","delete","member","put","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,YAAY,GAAG,2BAArB;AACA,IAAMC,YAAY,GAAG,aAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;AACzB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,EAAuC;AACnCG,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C;AACH;;AAED,MAAMQ,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACFW,IADE,CACG,UAAAC,QAAQ;AAAA,WACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAE,IAAI,EAAI;AACzB,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,eAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,aAAOA,IAAP;AACH,KALD,CADU;AAAA,GADX,CAAP;AASH,CArBD,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMI,iB;;;;;;;;;0BAEIC,Y,EAAc;AAChB,aAAOtB,KAAK,CAACuB,GAAN,WAAatB,YAAb,0BAAP;AACH;;;2BAEMuB,a,EAAe;AAClB,aAAOxB,KAAK,CAACuB,GAAN,WAAatB,YAAb,0BAAP;AACH;;;iCAEYwB,E,EAAI;AACb,aAAOzB,KAAK,CAAC0B,MAAN,WAAgBzB,YAAhB,cAAgCwB,EAAhC,EAAP;AACH;;;iCAEYA,E,EAAIE,M,EAAQ;AACrB,aAAO3B,KAAK,CAAC4B,GAAN,WAAa3B,YAAb,cAA6BwB,EAA7B,GAAmCE,MAAnC,CAAP;AACH;;;iCAEYA,M,EAAQ;AACjB,aAAO3B,KAAK,CAAC6B,IAAN,WAAc5B,YAAd,GAA8B0B,MAA9B,CAAP;AACH;;;;;;AAGL,eAAe,IAAIN,iBAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\nconst ACCESS_TOKEN = 'accessToken';\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n\r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n        .then(response =>\r\n            response.json().then(json => {\r\n                if(!response.ok) {\r\n                    return Promise.reject(json);\r\n                }\r\n                return json;\r\n            })\r\n        );\r\n};\r\n\r\n// export function login(loginRequest) {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/auth/sign-in\",\r\n//         method: 'POST',\r\n//         body: JSON.stringify(loginRequest)\r\n//     });\r\n// }\r\n\r\n// export function signup(signupRequest) {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/auth/sign-up\",\r\n//         method: 'POST',\r\n//         body: JSON.stringify(signupRequest)\r\n//     });\r\n// }\r\n\r\n// export function checkUsernameAvailability(username) {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/user/exist-username?username=\" + username,\r\n//         method: 'GET'\r\n//     });\r\n// }\r\n//\r\n// export function checkEmailAvailability(email) {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/user/exist-email?email=\" + email,\r\n//         method: 'GET'\r\n//     });\r\n// }\r\n//\r\n// export function getCurrentUser() {\r\n//     if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n//         return Promise.reject(\"No access token set.\");\r\n//     }\r\n//\r\n//     return request({\r\n//         url: API_BASE_URL + \"/user/profile\",\r\n//         method: 'GET'\r\n//     });\r\n// }\r\n//\r\n// export function getUserProfile(username) {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/users/\" + username,\r\n//         method: 'GET'\r\n//     });\r\n// }\r\n//\r\n// export function getListAccount() {\r\n//     return request({\r\n//         url: API_BASE_URL + \"/accounts/all\",\r\n//         method: 'GET'\r\n//     });\r\n// }\r\n\r\nclass AuthenticationAPI {\r\n\r\n    login(loginRequest) {\r\n        return axios.get(`${API_BASE_URL} + \"/auth/sign-in\"`);\r\n    }\r\n\r\n    signup(signupRequest) {\r\n        return axios.get(`${API_BASE_URL} + \"/auth/sign-up\"`);\r\n    }\r\n\r\n    deleteMember(id) {\r\n        return axios.delete(`${API_BASE_URL}/${id}`);\r\n    }\r\n\r\n    updateMember(id, member) {\r\n        return axios.put(`${API_BASE_URL}/${id}`, member);\r\n    }\r\n\r\n    createMember(member) {\r\n        return axios.post(`${API_BASE_URL}`, member);\r\n    }\r\n}\r\n\r\nexport default new AuthenticationAPI()\r\n\r\n"]},"metadata":{},"sourceType":"module"}