{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\trinh\\\\Downloads\\\\project\\\\chat-app\\\\client-chat-app\\\\src\\\\components\\\\credentials\\\\singup\\\\SingupComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthenticationAPI from '../../../service/AuthenticationAPI';\n\nvar SingupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingupComponent, _Component);\n\n  function SingupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SingupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingupComponent).call(this, props));\n    _this.state = {\n      id: '',\n      name: '',\n      username: '',\n      email: '',\n      password: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SingupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.id);\n\n      if (this.state.id === undefined) {\n        return;\n      }\n\n      AuthenticationAPI.signup(this.state.id).then(function (response) {\n        return _this2.setState({\n          name: response.data.name,\n          username: response.data.username,\n          email: response.data.email,\n          password: response.data.password\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(users) {\n      var errors = {};\n\n      if (!users.username) {\n        errors.username = 'Enter a Name';\n      } else if (users.username.length < 5) {\n        errors.username = 'Enter atleast 5 Characters in Nickname';\n      }\n\n      if (!users.password) {\n        errors.password = 'Enter a Author';\n      } else if (users.password.length < 3) {\n        errors.password = 'Enter atleast 5 Characters in Role';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(users) {\n      var _this3 = this;\n\n      var member = {\n        name: users.name,\n        username: users.username,\n        email: users.email,\n        password: users.password,\n        targetDate: users.targetDate\n      };\n      AuthenticationAPI.signup(member).then(function () {\n        return _this3.props.history.push('/members/all');\n      });\n      console.log(users);\n      console.log(member);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Member\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          name: name,\n          username: username,\n          email: email,\n          password: password\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Name\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Username\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Email\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Password\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return SingupComponent;\n}(Component);\n\nexport default SingupComponent;","map":{"version":3,"sources":["C:\\Users\\trinh\\Downloads\\project\\chat-app\\client-chat-app\\src\\components\\credentials\\singup\\SingupComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","AuthenticationAPI","SingupComponent","props","state","id","name","username","email","password","onSubmit","bind","validate","console","log","undefined","signup","then","response","setState","data","users","errors","length","member","targetDate","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport AuthenticationAPI from '../../../service/AuthenticationAPI';\r\n\r\nclass SingupComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        };\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.id)\r\n        if (this.state.id === undefined) {\r\n            return\r\n        }\r\n\r\n        AuthenticationAPI.signup(this.state.id)\r\n            .then(response => this.setState({\r\n                name: response.data.name,\r\n                username: response.data.username,\r\n                email: response.data.email,\r\n                password: response.data.password\r\n            }))\r\n    }\r\n\r\n    validate(users) {\r\n        let errors = {};\r\n        if (!users.username) {\r\n            errors.username = 'Enter a Name'\r\n        } else if (users.username.length < 5) {\r\n            errors.username = 'Enter atleast 5 Characters in Nickname'\r\n        }\r\n        if (!users.password) {\r\n            errors.password = 'Enter a Author'\r\n        } else if (users.password.length < 3) {\r\n            errors.password = 'Enter atleast 5 Characters in Role'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSubmit(users) {\r\n        let member = {\r\n            name: users.name,\r\n            username: users.username,\r\n            email: users.email,\r\n            password: users.password,\r\n            targetDate: users.targetDate\r\n        };\r\n        AuthenticationAPI.signup(member)\r\n            .then(() => this.props.history.push('/members/all'));\r\n        console.log(users);\r\n        console.log(member);\r\n    }\r\n\r\n    render() {\r\n        let { name, username, email, password } = this.state;\r\n        return (\r\n            <div>\r\n                <h3>Member</h3>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ name, username, email, password }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\"\r\n                                                  className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Username</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"username\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Email</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"email\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Password</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"password\" />\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingupComponent;"]},"metadata":{},"sourceType":"module"}